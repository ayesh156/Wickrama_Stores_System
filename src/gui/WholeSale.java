/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import static gui.Customer_registration.logger;
import java.awt.event.KeyEvent;
import java.nio.file.FileSystems;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import models.MyMethods;
import models.Mysql;
import models.ProductObject;
import models.wholeSaleInvoiceItem;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Dell
 */
public class WholeSale extends javax.swing.JPanel {

    private HashMap<String, ProductObject> productMap = new HashMap<>(); //to keep all products
    private HashMap<String, String> productNameMap = new HashMap<>(); //to keep product names with IDss
    private HashMap<String, wholeSaleInvoiceItem> cartMap = new HashMap<>(); //to keep product names with IDss

    private Home home;

    public void setHome(Home home) {
        this.home = home;
    }

    public void removeItem(String item) {
        jTextField1.setText("");
        loadProducts();

        if (cartMap.containsKey(productNameMap.get(item))) {
            cartMap.remove(productNameMap.get(item));
        } else if (cartMap.containsKey(item)) {
            cartMap.remove(item);
        }

        loadCart();
        calculation();
    }

    /**
     * Creates new form WholeSale
     */
    public WholeSale() {
        initComponents();
        addStyle();
        loadCart();
        calculation();
    }
    
    private void addStyle() {   
        jTextField2.putClientProperty("JTextField.showClearButton", true);
        jTextField1.putClientProperty("JTextField.showClearButton", true);
        jTextField3.putClientProperty("JTextField.showClearButton", true);
        jTextField4.putClientProperty("JTextField.showClearButton", true);
        jTextField5.putClientProperty("JTextField.showClearButton", true);
    }

    private void resetProduct() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField1.grabFocus();
    }

    private void navigateByKey(java.awt.event.KeyEvent evt, String currentField) {
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_DOWN:
                if (currentField.equals("name")) {
                    jPopupMenu1.setVisible(false);
                    jTextField2.grabFocus();
                } else if (currentField.equals("qty")) {
                    jTextField3.grabFocus();
                } else if (currentField.equals("discount")) {
                    jTextField5.grabFocus();
                }
                break;
            case KeyEvent.VK_UP:
                if (currentField.equals("qty")) {
                    jTextField1.grabFocus();
                } else if (currentField.equals("price")) {
                    jTextField2.grabFocus();
                } else if (currentField.equals("payment")) {
                    jTextField4.grabFocus();
                }
                break;
            case KeyEvent.VK_RIGHT:
                if (currentField.equals("qty")) {
                    jTextField5.grabFocus();
                } else if (currentField.equals("price")) {
                    jTextField5.grabFocus();
                } else if (currentField.equals("name")) {
                    jPopupMenu1.setVisible(false);
                    jTextField5.grabFocus();
                }
                break;
            case KeyEvent.VK_LEFT:
                if (currentField.equals("discount")) {
                    jTextField1.grabFocus();
                } else if (currentField.equals("payment")) {
                    jTextField1.grabFocus();
                }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        setLayout(new java.awt.BorderLayout(0, 10));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1069, 200));
        jPanel1.setLayout(new java.awt.BorderLayout(20, 0));

        jPanel8.setBackground(new java.awt.Color(153, 204, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel8.setPreferredSize(new java.awt.Dimension(600, 200));
        jPanel8.setLayout(new java.awt.BorderLayout(30, 0));

        jPanel14.setOpaque(false);
        jPanel14.setPreferredSize(new java.awt.Dimension(250, 180));
        jPanel14.setLayout(new java.awt.GridLayout(3, 0, 0, 10));

        jPanel16.setOpaque(false);
        jPanel16.setLayout(new java.awt.BorderLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Total");
        jPanel16.add(jLabel9, java.awt.BorderLayout.LINE_START);

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("0.00");
        jPanel16.add(jLabel14, java.awt.BorderLayout.CENTER);

        jPanel14.add(jPanel16);

        jPanel17.setOpaque(false);
        jPanel17.setLayout(new java.awt.BorderLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Total payable");
        jPanel17.add(jLabel10, java.awt.BorderLayout.LINE_START);

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("0.00");
        jPanel17.add(jLabel15, java.awt.BorderLayout.CENTER);

        jPanel14.add(jPanel17);

        jPanel18.setOpaque(false);
        jPanel18.setLayout(new java.awt.BorderLayout());

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Balance");
        jPanel18.add(jLabel11, java.awt.BorderLayout.LINE_START);

        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("0.00");
        jPanel18.add(jLabel16, java.awt.BorderLayout.CENTER);

        jPanel14.add(jPanel18);

        jPanel8.add(jPanel14, java.awt.BorderLayout.WEST);

        jPanel15.setOpaque(false);
        jPanel15.setLayout(new java.awt.GridLayout(3, 0, 0, 17));

        jPanel19.setOpaque(false);
        jPanel19.setLayout(new java.awt.BorderLayout());

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Discount");
        jLabel12.setPreferredSize(new java.awt.Dimension(100, 0));
        jPanel19.add(jLabel12, java.awt.BorderLayout.LINE_START);

        jTextField4.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });
        jPanel19.add(jTextField4, java.awt.BorderLayout.CENTER);

        jPanel15.add(jPanel19);

        jPanel20.setOpaque(false);
        jPanel20.setLayout(new java.awt.BorderLayout());

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Payment");
        jLabel13.setPreferredSize(new java.awt.Dimension(100, 0));
        jPanel20.add(jLabel13, java.awt.BorderLayout.LINE_START);

        jTextField5.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
        });
        jPanel20.add(jTextField5, java.awt.BorderLayout.CENTER);

        jPanel15.add(jPanel20);

        jPanel21.setOpaque(false);
        jPanel21.setLayout(new java.awt.BorderLayout(5, 0));

        jButton3.setBackground(new java.awt.Color(0, 153, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Reset");
        jButton3.setPreferredSize(new java.awt.Dimension(100, 31));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton3, java.awt.BorderLayout.LINE_START);

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Print invoice");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton4, java.awt.BorderLayout.CENTER);

        jPanel15.add(jPanel21);

        jPanel8.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel8, java.awt.BorderLayout.LINE_END);

        jPanel9.setOpaque(false);
        jPanel9.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.BorderLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 255));
        jLabel6.setText("Name");
        jLabel6.setPreferredSize(new java.awt.Dimension(110, 0));
        jPanel10.add(jLabel6, java.awt.BorderLayout.LINE_START);

        jTextField1.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel10.add(jTextField1, java.awt.BorderLayout.CENTER);
        jTextField1.getAccessibleContext().setAccessibleName("Product name");

        jPanel9.add(jPanel10);

        jPanel11.setOpaque(false);
        jPanel11.setLayout(new java.awt.BorderLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 255));
        jLabel7.setText("Quantity");
        jLabel7.setPreferredSize(new java.awt.Dimension(110, 0));
        jPanel11.add(jLabel7, java.awt.BorderLayout.LINE_START);

        jTextField2.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        jPanel11.add(jTextField2, java.awt.BorderLayout.CENTER);
        jTextField2.getAccessibleContext().setAccessibleName("Quantity");

        jPanel9.add(jPanel11);

        jPanel12.setOpaque(false);
        jPanel12.setLayout(new java.awt.BorderLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 255));
        jLabel8.setText("Selling price");
        jLabel8.setPreferredSize(new java.awt.Dimension(110, 0));
        jPanel12.add(jLabel8, java.awt.BorderLayout.LINE_START);

        jTextField3.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });
        jPanel12.add(jTextField3, java.awt.BorderLayout.CENTER);
        jTextField3.getAccessibleContext().setAccessibleName("Selling price");

        jPanel9.add(jPanel12);

        jPanel13.setOpaque(false);
        jPanel13.setLayout(new java.awt.GridLayout(1, 2, 5, 0));

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Clear product");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton1);

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Add To Invoice");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton2);

        jPanel9.add(jPanel13);

        jPanel1.add(jPanel9, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel3.setBackground(new java.awt.Color(239, 242, 247));
        jPanel3.setPreferredSize(new java.awt.Dimension(1069, 50));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel6.setOpaque(false);
        jPanel6.setPreferredSize(new java.awt.Dimension(60, 50));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel6, java.awt.BorderLayout.LINE_END);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("#");
        jLabel1.setPreferredSize(new java.awt.Dimension(50, 16));
        jPanel3.add(jLabel1, java.awt.BorderLayout.LINE_START);

        jPanel5.setOpaque(false);
        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 255));
        jLabel2.setText("ITEM");
        jPanel5.add(jLabel2, java.awt.BorderLayout.CENTER);

        jPanel7.setOpaque(false);
        jPanel7.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel7.setLayout(new java.awt.GridLayout(1, 3));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 153, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("QUANTITY");
        jPanel7.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 153, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("SELLING PRICE");
        jPanel7.add(jLabel4);

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 153, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("TOTAL");
        jPanel7.add(jLabel5);

        jPanel5.add(jPanel7, java.awt.BorderLayout.LINE_END);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBorder(null);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setViewportView(jPanel4);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
            if (evt.getKeyCode() != KeyEvent.VK_ESCAPE) {
                MyMethods.loadPopup(jPopupMenu1, jTextField1, loadProducts(), null);
                if (jTextField1.getText().equals("")) {
                    jPopupMenu1.setVisible(false);
                }
            } else {
                jPopupMenu1.setVisible(false);
            }

            if (evt.getKeyCode() != KeyEvent.VK_DOWN && evt.getKeyCode() != KeyEvent.VK_UP) {
                jTextField1.grabFocus();
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (addToCart()) {
            resetProduct();
            calculation();

        } else {
            jScrollPane1.getVerticalScrollBar().setValue(jScrollPane1.getVerticalScrollBar().getMaximum());
            jTextField2.grabFocus();
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        resetProduct();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        // TODO add your handling code here:
        calculation();
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        // TODO add your handling code here:
        calculation();
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        if (!MyMethods.isInputEmpty(home, jTextField2, false)) {
            jTextField2.setText(MyMethods.extractNumbers(jTextField2.getText()));
        }
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        // TODO add your handling code here:
        if (!MyMethods.isInputEmpty(home, jTextField3, false)) {
            jTextField3.setText(MyMethods.extractNumbers(jTextField3.getText()));
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (printInvoice()) {
            JOptionPane.showMessageDialog(this, "Oops! Invoice printing is cancelled", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private boolean printInvoice() {
        double balance = Double.parseDouble(jLabel16.getText());
        String payment = jTextField5.getText();

        boolean check = true;
        if (balance < 0) {
//            JOptionPane.showMessageDialog(this, "Your payment is low", "Warning", JOptionPane.WARNING_MESSAGE);
//            payment = "" + balance;
//            check = false;
        }

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy");
        LocalDateTime now = LocalDateTime.MAX.now();

        DateTimeFormatter dtf1 = DateTimeFormatter.ofPattern("MM");
        LocalDateTime now1 = LocalDateTime.MAX.now();

        DateTimeFormatter dtf2 = DateTimeFormatter.ofPattern("dd");
        LocalDateTime now2 = LocalDateTime.MAX.now();

        DateTimeFormatter dtf3 = DateTimeFormatter.ofPattern("HH");
        LocalDateTime now3 = LocalDateTime.MAX.now();

        DateTimeFormatter dtf4 = DateTimeFormatter.ofPattern("mm");
        LocalDateTime now4 = LocalDateTime.MAX.now();

        DateTimeFormatter dtf5 = DateTimeFormatter.ofPattern("ss");
        LocalDateTime now5 = LocalDateTime.MAX.now();

        DateTimeFormatter dtf6 = DateTimeFormatter.ofPattern("SSS");
        LocalDateTime now6 = LocalDateTime.MAX.now();

        String date = dtf.format(now);
        String date2 = dtf1.format(now1);
        String date3 = dtf2.format(now2);
        String date4 = dtf3.format(now3);
        String date5 = dtf4.format(now4);
        String date6 = dtf5.format(now5);
        String date7 = dtf6.format(now6);

        String date1 = date.substring(3);

        String roundedTime = date1 + date2 + date3 + date4 + date5 + date6;
//        String roundedTime = curdate.substring(0, curdate.length() - 1);

        String discountValue = jTextField4.getText();
        if (discountValue == null || discountValue.isEmpty()) {
            discountValue = "0.00";
        }

        if (check) {
            try {
                DateTimeFormatter dt = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                LocalDateTime nowd = LocalDateTime.MAX.now();
                String dated = dt.format(nowd);

                String datep = new SimpleDateFormat("yyyy-MM-dd hh:mm a").format(new Date());

                Mysql.execute("INSERT INTO `whole_sale_invoice` (`id`,`datetime`,`payment`,`discount`)"
                        + "VALUES('" + roundedTime + "','" + dated + "','" + payment + "','" + discountValue + "')");

                for (wholeSaleInvoiceItem product : cartMap.values()) {
                    Mysql.execute("INSERT INTO `whole_sale_invoice_item`  (`product_name`,`quantity`,`price`,`invoice_id`) "
                            + "VALUES('" + product.getProductName() + "','" + product.getQuantity() + "','" + product.getSellingPrice() + "','" + roundedTime + "')  ");

                }

                String userDirectory = FileSystems.getDefault().getPath("").toAbsolutePath().toString();
//
                String newpath = userDirectory.substring(0, userDirectory.lastIndexOf("\\"));
//                System.out.println(newpath);
//
                String url = newpath + "\\src\\reports\\WikcramaInvoice_2.jasper";
                
//              String url = "src/reports/WikcramaInvoice_2.jasper";
//
//                //bean collection vector for datasource of the report
                Vector<wholeSaleInvoiceItem> vector = new Vector<>();

                //re ordering hashmap
                List<Map.Entry<String, wholeSaleInvoiceItem>> list = new ArrayList<>(cartMap.entrySet());

                // Sort the list based on values using a custom comparator
                Collections.sort(list, (entry1, entry2) -> entry1.getValue().getTimestamp().compareTo(entry2.getValue().getTimestamp()));

                // Create a LinkedHashMap to preserve the order
                Map<String, wholeSaleInvoiceItem> sortedMap = new LinkedHashMap<>();

                for (Map.Entry<String, wholeSaleInvoiceItem> entry : list) {
                    sortedMap.put(entry.getKey(), entry.getValue());
                }
                
                for (Map.Entry<String, wholeSaleInvoiceItem> entry : sortedMap.entrySet()) {
                    wholeSaleInvoiceItem item = entry.getValue();

                    vector.add(item);
                }

                java.util.HashMap<String, Object> parameters = new HashMap<>();

                parameters.put("Parameter1", datep);
                parameters.put("Parameter2", roundedTime);
                parameters.put("Parameter3", home.user); //user

                parameters.put("Parameter4", jLabel14.getText() + "0"); //total
                parameters.put("Parameter5", payment + ".00"); //payment amount
                parameters.put("Parameter6", jLabel16.getText() + "0"); //balance
                parameters.put("Parameter7", "Rs:" + jTextField4.getText()); //total discount
                parameters.put("Parameter8", String.valueOf(cartMap.size())); // Product Count
//
//              CartMap
                JRBeanCollectionDataSource datasource = new JRBeanCollectionDataSource(vector);
                JREmptyDataSource s2 = new JREmptyDataSource();
//
                JasperPrint report = JasperFillManager.fillReport(url, parameters, datasource);
                JasperPrintManager.printReport(report, false); //print report dirrectly
//              JasperExportManager.exportReportToPdfFile(report, "report.pdf");
//                JasperViewer.viewReport(report, false);

                jTextField1.grabFocus();
                cartMap.clear();
                resetProduct();
                loadCart();
                calculation();
                System.out.println("Invoice success");
                return false;
            } catch (Exception e) {
                logger.log(Level.WARNING, "print wholeSale Invoice ", e);
                e.printStackTrace();
                return true;
            }

        }
        return false;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextField1.grabFocus();
        cartMap.clear();
        resetProduct();
        loadCart();
        calculation();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextField2.grabFocus();
        }
        if (!jPopupMenu1.isVisible()) {
            navigateByKey(evt, "name");
        }

    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            jTextField3.grabFocus();

        }
        navigateByKey(evt, "qty");
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (addToCart()) {
                resetProduct();
                calculation();
            } else {
                jTextField3.grabFocus();
            }
        }

        navigateByKey(evt, "price");
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (printInvoice()) {
                JOptionPane.showMessageDialog(this, "Oops! Something went wrong", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        navigateByKey(evt, "discount");
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (printInvoice()) {
                JOptionPane.showMessageDialog(this, "Oops! Something went wrong", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        navigateByKey(evt, "payment");
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        // TODO add your handling code here:
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        jScrollPane1.getVerticalScrollBar().setValue(jScrollPane1.getVerticalScrollBar().getMaximum());
    }//GEN-LAST:event_jTextField1FocusGained

    private void calculation() {
        double total = 0;
        double totalPayable = 0;
        double balance = 0;
        double payment = 0;

        if (cartMap.isEmpty()) {
            jTextField4.setText("");
            jTextField5.setText("");
        } else {
            for (wholeSaleInvoiceItem item : cartMap.values()) {
                total += (item.getQuantity() * item.getSellingPrice());
            }
            totalPayable += total;

            if (!MyMethods.isInputEmpty(home, jTextField4, false)) {
                jTextField4.setText(MyMethods.extractNumbers(jTextField4.getText()));
                if (!MyMethods.extractNumbers(jTextField4.getText()).equals("")) {
                    totalPayable -= Double.parseDouble(jTextField4.getText());
                }
            }

            if (!MyMethods.isInputEmpty(home, jTextField5, false)) {
                jTextField5.setText(MyMethods.extractNumbers(jTextField5.getText()));
                if (!MyMethods.extractNumbers(jTextField5.getText()).equals("")) {
                    payment = Double.parseDouble(jTextField5.getText());
                }
            }

            balance = payment - totalPayable;

        }

        jLabel14.setText("" + total);
        jLabel15.setText("" + totalPayable);
        jLabel16.setText("" + balance);

    }

    private boolean addToCart() {
        boolean validity = true;
        if (!MyMethods.isInputEmpty(home, jTextField1, true) && !MyMethods.isInputEmpty(home, jTextField2, true) && !MyMethods.isInputEmpty(home, jTextField3, true)) {

            if (MyMethods.isNumeric(home, jTextField2.getText())) {
                if (productMap.containsKey(productNameMap.get(jTextField1.getText().trim()))) {
                   String barcode = productNameMap.get(jTextField1.getText().trim());
                    wholeSaleInvoiceItem newItem = new wholeSaleInvoiceItem();
                    if (cartMap.containsKey(barcode)) {
                        //increase quantity
                        cartMap.get(barcode).setQuantity(cartMap.get(barcode).getQuantity() + Double.parseDouble(jTextField2.getText().trim()));

                    } else {
                        //add new product to cartmap
                        ProductObject product = productMap.get(productNameMap.get(jTextField1.getText().trim()));
                        newItem.setBarcode(product.getBarcode());
                        newItem.setProductName(product.getProduct_name());
                        newItem.setSellingPrice(Double.parseDouble(jTextField3.getText().trim()));
                        newItem.setQuantity(Double.parseDouble(jTextField2.getText().trim()));

                        Date timestamp = new Date();
                        newItem.setTimestamp(timestamp);
                        cartMap.put(product.getBarcode(), newItem);
                    }

                } else {
                    wholeSaleInvoiceItem newItem = new wholeSaleInvoiceItem();
                    if (cartMap.containsKey(jTextField1.getText().trim())) {
                        //increase quantity
                        cartMap.get(jTextField1.getText().trim()).setQuantity(cartMap.get(jTextField1.getText().trim()).getQuantity() + Double.parseDouble(jTextField2.getText().trim()));
                    } else {
                        //add new product to cartmap                      

                        newItem.setProductName(jTextField1.getText().trim());
                        newItem.setSellingPrice(Double.parseDouble(jTextField3.getText().trim()));
                        newItem.setQuantity(Double.parseDouble(jTextField2.getText().trim()));

                        Date timestamp = new Date();
                        newItem.setTimestamp(timestamp);
                        cartMap.put(jTextField1.getText().trim(), newItem);
                    }
                }
            } else {
                validity = false;
            }

        } else {
            validity = false;
        }

        loadCart();

        return validity;
    }

    private void loadCart() {

        if (!cartMap.isEmpty()) {
            jPanel4.removeAll();
            int number = 1;

            List<Map.Entry<String, wholeSaleInvoiceItem>> list = new ArrayList<>(cartMap.entrySet());

            // Sort the list based on values using a custom comparator
            Collections.sort(list, (entry1, entry2) -> entry1.getValue().getTimestamp().compareTo(entry2.getValue().getTimestamp()));

            // Create a LinkedHashMap to preserve the order
            Map<String, wholeSaleInvoiceItem> sortedMap = new LinkedHashMap<>();

            for (Map.Entry<String, wholeSaleInvoiceItem> entry : list) {
                sortedMap.put(entry.getKey(), entry.getValue());
            }
            for (Map.Entry<String, wholeSaleInvoiceItem> entry : sortedMap.entrySet()) {
                wholeSaleInvoiceItem item = entry.getValue();
                WholeSaleCartItem cartItem = new WholeSaleCartItem();
                cartItem.setSale(this);
                cartItem.setItemNumber("" + number);
                item.setItemNumber("" + number);
                cartItem.setProductName(item.getProductName());
                cartItem.setQuantity("" + item.getQuantity());
                cartItem.setPrice("" + item.getSellingPrice());
                cartItem.setTotal("" + (item.getQuantity() * item.getSellingPrice()));
                item.setTotal(item.getQuantity() * item.getSellingPrice());
                jPanel4.add(cartItem);
                number++;
            }
            jButton4.setEnabled(true);
        } else {
            jPanel4.removeAll();
            jButton4.setEnabled(false);
        }

        jPanel4.revalidate();
        jPanel4.repaint();

    }

    private HashMap<String, String> loadProducts() {
        productMap.clear();
        productNameMap.clear();

        String limit = "";
        if (jTextField1.getText().trim().equals("")) {

        } else {
            limit = " LIMIT 5 ";
        }

        try {
            String name = jTextField1.getText();
            ResultSet reseults = Mysql.execute("SELECT * FROM `products` WHERE `name` LIKE '%" + name + "%'" + limit);

            while (reseults.next()) {
//                System.out.println(reseults.getString("product_id"));
                ProductObject product1 = new ProductObject();
                product1.setBarcode(reseults.getString("product_id"));
                product1.setBrand(reseults.getString("brand"));
                product1.setImage(reseults.getString("img_url"));
                product1.setProduct_name(reseults.getString("name"));
                product1.setQuantity(reseults.getDouble("qty"));
                product1.setSelling_price(reseults.getDouble("selling_price"));
                product1.setOur_price(reseults.getDouble("our_price"));
                product1.setDiscount(product1.getSelling_price() - product1.getOur_price());

                productMap.put(product1.getBarcode(), product1);    //adding the objects to the hashmap
                productNameMap.put(product1.getProduct_name(), product1.getBarcode());   //adding the Product names and IDs to the hashmap   

            }

            return productNameMap;

        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
